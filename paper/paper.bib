@article{Doring2008,
abstract = {BACKGROUND: The use of novel algorithmic techniques is pivotal to many important problems in life science. For example the sequencing of the human genome 1 would not have been possible without advanced assembly algorithms. However, owing to the high speed of technological progress and the urgent need for bioinformatics tools, there is a widening gap between state-of-the-art algorithmic techniques and the actual algorithmic components of tools that are in widespread use. RESULTS: To remedy this trend we propose the use of SeqAn, a library of efficient data types and algorithms for sequence analysis in computational biology. SeqAn comprises implementations of existing, practical state-of-the-art algorithmic components to provide a sound basis for algorithm testing and development. In this paper we describe the design and content of SeqAn and demonstrate its use by giving two examples. In the first example we show an application of SeqAn as an experimental platform by comparing different exact string matching algorithms. The second example is a simple version of the well-known MUMmer tool rewritten in SeqAn. Results indicate that our implementation is very efficient and versatile to use. CONCLUSION: We anticipate that SeqAn greatly simplifies the rapid development of new bioinformatics tools by providing a collection of readily usable, well-designed algorithmic components which are fundamental for the field of sequence analysis. This leverages not only the implementation of new algorithms, but also enables a sound analysis and comparison of existing algorithms.},
archivePrefix = {arXiv},
arxivId = {1105.1581},
author = {D{\"{o}}ring, Andreas and Weese, David and Rausch, Tobias and Reinert, Knut},
doi = {10.1186/1471-2105-9-11},
eprint = {1105.1581},
isbn = {1471-2105 (Linking)},
issn = {14712105},
journal = {BMC Bioinformatics},
pmid = {18184432},
title = {{SeqAn an efficient, generic C++ library for sequence analysis}},
year = {2008}
}

@article{Eddelbuettel2018,
abstract = {R has always provided an application programming interface (API) for extensions. Based on the C language, it uses a number of macros and other low-level constructs to exchange data structures between the R process and any dynamically-loaded component modules authors added to it. With the introduction of the Rcpp package, and its later refinements, this process has become considerably easier yet also more robust. By now, Rcpp has become the most popular extension mechanism for R. This article introduces Rcpp, and illustrates with several examples how the Rcpp Attributes mechanism in particular eases the transition of objects between R and C++ code.},
author = {Eddelbuettel, Dirk and Balamuta, James Joseph},
doi = {10.1080/00031305.2017.1375990},
isbn = {9781479968909},
issn = {15372731},
journal = {American Statistician},
keywords = {Applications and case studies,Computationally intensive methods,Simulation,Statistical computing},
title = {{Extending R with C++: A Brief Introduction to Rcpp}},
year = {2018}
}

@Article{Huber2015,
    author = {W. Huber and V. J. Carey and R. Gentleman and S. Anders and M. Carlson and B. S. Carvalho and H. C. Bravo and S. Davis and L. Gatto and T. Girke and R. Gottardo and F. Hahne and K. D. Hansen and R. A. Irizarry and M. Lawrence and M. I. Love and J. MacDonald and V. Obenchain and A. K. {Ole's} and H. {Pag`es} and A. Reyes and P. Shannon and G. K. Smyth and D. Tenenbaum and L. Waldron and M. Morgan},
    title = {{O}rchestrating high-throughput genomic analysis with {B}ioconductor},
    journal = {Nature Methods},
    year = {2015},
    volume = {12},
    number = {2},
    pages = {115--121},
    url = {http://www.nature.com/nmeth/journal/v12/n2/full/nmeth.3252.html},
  }
  
@article{Langmead2013,
abstract = {As the rate of sequencing increases, greater throughput is demanded from read aligners. The full-text minute index is often used to make alignment very fast and memory-efficient, but the approach is ill-suited to finding longer, gapped alignments. Bowtie 2 combines the strengths of the full-text minute index with the flexibility and speed of hardware-accelerated dynamic programming algorithms to achieve a combination of high speed, sensitivity and accuracy.},
author = {Langmead},
doi = {10.1038/nmeth.1923.Fast},
issn = {1548-7091},
journal = {Nature methods},
pmid = {22388286},
title = {{Bowtie2}},
year = {2013}
}


@Article{Morgan2009,
    title = {{ShortRead}: a {B}ioconductor package for input, quality assessment and exploration of high-throughput sequence data},
    author = {Martin Morgan and Simon Anders and Michael Lawrence and Patrick Aboyoun and Herv\'e Pag\`es and Robert Gentleman},
    year = {2009},
    journal = {Bioinformatics},
    volume = {25},
    pages = {2607-2608},
    doi = {10.1093/bioinformatics/btp450},
    url = {http://dx.doi.org10.1093/bioinformatics/btp450},
  }

@article{Reinert2017,
abstract = {Background The use of novel algorithmic techniques is pivotal to many important problems in life science. For example the sequencing of the human genome (Venter et al., 2001) would not have been possible without advanced assembly algorithms and the development of practical BWT based read mappers have been instrumental for NGS analysis. However, owing to the high speed of technological progress and the urgent need for bioinformatics tools, there was a widening gap between state-of-the-art algorithmic techniques and the actual algorithmic components of tools that are in widespread use. We previously addressed this by introducing the SeqAn library of efficient data types and algorithms in 2008 (D{\"{o}}ring et al., 2008). Results The SeqAn library has matured considerably since its first publication 9 years ago. In this article we review its status as an established resource for programmers in the field of sequence analysis and its contributions to many analysis tools. Conclusions We anticipate that SeqAn will continue to be a valuable resource, especially since it started to actively support various hardware acceleration techniques in a systematic manner.},
author = {Reinert, Knut and Dadi, Temesgen Hailemariam and Ehrhardt, Marcel and Hauswedell, Hannes and Mehringer, Svenja and Rahn, Ren{\'{e}} and Kim, Jongkyu and Pockrandt, Christopher and Winkler, J{\"{o}}rg and Siragusa, Enrico and Urgese, Gianvito and Weese, David},
doi = {10.1016/j.jbiotec.2017.07.017},
isbn = {0168-1656},
issn = {18734863},
journal = {Journal of Biotechnology},
keywords = {C++,Data structures,NGS analysis,Software libraries},
pmid = {28888961},
title = {{The SeqAn C++ template library for efficient sequence analysis: A resource for programmers}},
year = {2017}
}

@article{Trapnell2009,
abstract = {MOTIVATION: A new protocol for sequencing the messenger RNA in a cell, known as RNA-Seq, generates millions of short sequence fragments in a single run. These fragments, or 'reads', can be used to measure levels of gene expression and to identify novel splice variants of genes. However, current software for aligning RNA-Seq data to a genome relies on known splice junctions and cannot identify novel ones. TopHat is an efficient read-mapping algorithm designed to align reads from an RNA-Seq experiment to a reference genome without relying on known splice sites.$\backslash$n$\backslash$nRESULTS: We mapped the RNA-Seq reads from a recent mammalian RNA-Seq experiment and recovered more than 72{\%} of the splice junctions reported by the annotation-based software from that study, along with nearly 20,000 previously unreported junctions. The TopHat pipeline is much faster than previous systems, mapping nearly 2.2 million reads per CPU hour, which is sufficient to process an entire RNA-Seq experiment in less than a day on a standard desktop computer. We describe several challenges unique to ab initio splice site discovery from RNA-Seq reads that will require further algorithm development.$\backslash$n$\backslash$nAVAILABILITY: TopHat is free, open-source software available from http://tophat.cbcb.umd.edu.$\backslash$n$\backslash$nSUPPLEMENTARY INFORMATION: Supplementary data are available at Bioinformatics online.},
archivePrefix = {arXiv},
arxivId = {cs/9605103},
author = {Trapnell, Cole and Pachter, Lior and Salzberg, Steven L.},
doi = {10.1093/bioinformatics/btp120},
eprint = {9605103},
isbn = {1367-4811 (Electronic)$\backslash$r1367-4803 (Linking)},
issn = {13674803},
journal = {Bioinformatics},
pmid = {19289445},
primaryClass = {cs},
title = {{TopHat: Discovering splice junctions with RNA-Seq}},
year = {2009}
}
